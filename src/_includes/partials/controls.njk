<aside>
    <div class="sticky top-s-m">
        <div class="switcher">
            <div
                class="stack"
                data-stack-space="tiny"
            >
                <fieldset x-on:change="setTheme($event.target.value)">
                    <legend>
                        theme presets {% set id = 'themes' %} {% set content = '(almost) all style
                        changes are based on a different set of design tokens that are
                        applied via custom properties. \n\n design tokens are taken from
                        [open props](https://open-props.style).' %} {% include
                        "components/tooltip.njk" %}
                    </legend>

                    <div class="cluster">
                        {% for theme in themes %}
                        <label>
                            <input
                                type="radio"
                                name="theme"
                                value="{{ theme }}"
                                x-model="activeTheme"
                            />
                            <span>{{ theme }}</span>
                        </label>
                        {% endfor %}
                    </div>
                </fieldset>

                <fieldset>
                    <legend>token picker {% set id = 'tokens' %} {% set content = 'here you can swap out individual
                        design tokens that i have set in the presets.' %} {% include
                        "components/tooltip.njk" %}</legend>

                    <details class="stack">
                        <summary>
                            options
                        </summary>

                        <fieldset>
                            <legend>display font</legend>
                            {% set name = '--font-display' %} {% include
                            "components/change-property.njk" %}
                        </fieldset>
                        <fieldset>
                            <legend>brand color</legend>
                            {% set name = '--brand' %} {% include "components/change-property.njk"
                            %}
                        </fieldset>
                        <fieldset>
                            <legend>accent color</legend>
                            {% set name = '--accent' %} {% include
                            "components/change-property.njk" %}
                        </fieldset>
                        <fieldset>
                            <legend>border radius</legend>
                            {% set name = '--border-radius' %} {% include
                            "components/change-property.njk" %}
                        </fieldset>
                    </details>
                </fieldset>

                <fieldset x-on:change="toggleStylesheet($event.target.value)">
                    <legend>
                        css layers {% set id = 'cssLayers' %} {% set content = 'css is applied according to the [cube
                        css](https://cube.fyi) methodology. this means that most styles are declared in the global
                        layer, providing a strong foundation for the use of semantic html. the layout is handled with
                        only a few compositions. utilities add some helpful tools to improve the experience. finally,
                        blocks and exceptions sprinkle in little details to suit specific components. \n\n toggle the
                        checkboxes to see the impact of the different layers.' %} {% include "components/tooltip.njk" %}
                    </legend>

                    <div class="cluster">
                        {% for layer in cssLayers %}
                        <label>
                            <input
                                type="checkbox"
                                value="{{ layer }}"
                                checked
                            />
                            <span>{{ layer }}</span>
                        </label>
                        {% endfor %}
                    </div>
                </fieldset>
            </div>

        </div>
    </div>
</aside>
